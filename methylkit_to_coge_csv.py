#!/usr/bin/env python3

# Author: Jeffrey Grover
# Created: 2016-11
# Refactored: 2019-08-05
# Purpose: Convert .methylKit methylation summaries into .csv for CoGe. Based on
# my ~3 year old script that was too ugly for me to leave it alone.


import gzip
from argparse import ArgumentParser


def magic_open(input_file):
    if input_file.endswith('gz'):
        return gzip.open(input_file, 'rt')
    else:
        return open(input_file, 'r')


def filter_bedgraph(input_methylkit, min_coverage):
    with magic_open(input_methylkit) as input_handle:
        next(input_handle)
        for line in input_handle:
            entry = line.strip().split()
            coverage = int(entry[4])
            if coverage >= min_coverage:
                chromosome = entry[1]
                position = int(entry[2]) - 1  # Convert to zero-based
                if entry[3] == 'F':
                    strand = '1'
                elif entry[3] == 'R':
                    strand = '-1'
                perc_methylation = entry[5]
                print(chromosome, position, position, strand, perc_methylation,
                      sep='\t')


def get_args():
    parser = ArgumentParser(
        description='Convert methylKit-formatted summaries (generated by '
        'MethylDackel, for example) to csv for import into CoGe. Input file '
        'may be gzipped.')
    parser.add_argument('methylkit',
                        help='Context-specific methylation summary',
                        metavar='FILE.methylKit(.gz)')
    parser.add_argument('-c', '--coverage',
                        default=1,
                        help='Minimum coverage to report positions. Default = '
                        '1 (Unfiltered)')
    return parser.parse_args()


def main(args):
    filter_bedgraph(args.methylkit, args.coverage)


if __name__ == '__main__':
    main(get_args())
